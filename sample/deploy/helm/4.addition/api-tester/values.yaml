# Default values for api-tester.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: 1pro/api-tester:v1.0.0
  pullPolicy: Always
  # note: Chart.yaml의 appVersion이 tag값에 들어감
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80
  # note: nodePort사용하려면 service.yaml에서 spec.ports.nodePort: {{ .Values.service.nodePort }} 추가해야 함
  nodePort: 32221

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: # {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # note: 리소스 설정
  requests:
    memory: "100Mi"
    cpu: "100m"
  limits:
    memory: "200Mi"
    cpu: "200m"

autoscaling:
  enabled: false # HPA 사용 여부
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
# note: 공통으로 사용할 volumes 정보
volumes:
  - name: secret-datasource
    secret:
      secretName: api-tester-2221-postgresql

# Additional volumeMounts on the output Deployment definition.
# note: 공통으로 사용할 volumeMounts 정보
volumeMounts:
  - name: secret-datasource
    mountPath: /usr/src/myapp/datasource

nodeSelector: {}

tolerations: []

affinity: {}

# note: 공통으로 사용할 configmap 정보
configmap:
  data:
    properties:
      spring_profiles_active: "dev"
      application_role: "ALL"
      postgresql_filepath: "/usr/src/myapp/datasource/postgresql-info.yaml"

# note: 공통으로 사용할 secret 정보
secret:
  data:
    postgresql:
      postgresql-info.yaml: |
        driver-class-name: "org.postgresql.Driver"
        url: "jdbc:postgresql://postgresql:5431"
        username: "dev"
        password: "dev123"